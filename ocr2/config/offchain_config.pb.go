// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.8
// source: offchain_config.proto

package config

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OffchainConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeltaProgress                           uint64                        `protobuf:"varint,1,opt,name=delta_progress,json=deltaProgress,proto3" json:"delta_progress,omitempty"`
	DeltaResend                             uint64                        `protobuf:"varint,2,opt,name=delta_resend,json=deltaResend,proto3" json:"delta_resend,omitempty"`
	DeltaRound                              uint64                        `protobuf:"varint,3,opt,name=delta_round,json=deltaRound,proto3" json:"delta_round,omitempty"`
	DeltaGrace                              uint64                        `protobuf:"varint,4,opt,name=delta_grace,json=deltaGrace,proto3" json:"delta_grace,omitempty"`
	DeltaStage                              uint64                        `protobuf:"varint,5,opt,name=delta_stage,json=deltaStage,proto3" json:"delta_stage,omitempty"`
	RMax                                    uint32                        `protobuf:"varint,6,opt,name=r_max,json=rMax,proto3" json:"r_max,omitempty"`
	S                                       []uint32                      `protobuf:"varint,7,rep,packed,name=s,proto3" json:"s,omitempty"`
	OffchainPublicKeys                      [][]byte                      `protobuf:"bytes,8,rep,name=offchain_public_keys,json=offchainPublicKeys,proto3" json:"offchain_public_keys,omitempty"`
	PeerIds                                 []string                      `protobuf:"bytes,9,rep,name=peer_ids,json=peerIds,proto3" json:"peer_ids,omitempty"`
	ReportingPluginConfig                   []byte                        `protobuf:"bytes,10,opt,name=reporting_plugin_config,json=reportingPluginConfig,proto3" json:"reporting_plugin_config,omitempty"`
	MaxDurationQuery                        uint64                        `protobuf:"varint,11,opt,name=max_duration_query,json=maxDurationQuery,proto3" json:"max_duration_query,omitempty"`
	MaxDurationObservation                  uint64                        `protobuf:"varint,12,opt,name=max_duration_observation,json=maxDurationObservation,proto3" json:"max_duration_observation,omitempty"`
	MaxDurationReport                       uint64                        `protobuf:"varint,13,opt,name=max_duration_report,json=maxDurationReport,proto3" json:"max_duration_report,omitempty"`
	MaxDurationShouldAcceptFinalizedReport  uint64                        `protobuf:"varint,14,opt,name=max_duration_should_accept_finalized_report,json=maxDurationShouldAcceptFinalizedReport,proto3" json:"max_duration_should_accept_finalized_report,omitempty"`
	MaxDurationShouldTransmitAcceptedReport uint64                        `protobuf:"varint,15,opt,name=max_duration_should_transmit_accepted_report,json=maxDurationShouldTransmitAcceptedReport,proto3" json:"max_duration_should_transmit_accepted_report,omitempty"`
	SharedSecretEncryptions                 *SharedSecretEncryptionsProto `protobuf:"bytes,16,opt,name=shared_secret_encryptions,json=sharedSecretEncryptions,proto3" json:"shared_secret_encryptions,omitempty"`
}

func (x *OffchainConfig) Reset() {
	*x = OffchainConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offchain_config_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OffchainConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OffchainConfig) ProtoMessage() {}

func (x *OffchainConfig) ProtoReflect() protoreflect.Message {
	mi := &file_offchain_config_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OffchainConfig.ProtoReflect.Descriptor instead.
func (*OffchainConfig) Descriptor() ([]byte, []int) {
	return file_offchain_config_proto_rawDescGZIP(), []int{0}
}

func (x *OffchainConfig) GetDeltaProgress() uint64 {
	if x != nil {
		return x.DeltaProgress
	}
	return 0
}

func (x *OffchainConfig) GetDeltaResend() uint64 {
	if x != nil {
		return x.DeltaResend
	}
	return 0
}

func (x *OffchainConfig) GetDeltaRound() uint64 {
	if x != nil {
		return x.DeltaRound
	}
	return 0
}

func (x *OffchainConfig) GetDeltaGrace() uint64 {
	if x != nil {
		return x.DeltaGrace
	}
	return 0
}

func (x *OffchainConfig) GetDeltaStage() uint64 {
	if x != nil {
		return x.DeltaStage
	}
	return 0
}

func (x *OffchainConfig) GetRMax() uint32 {
	if x != nil {
		return x.RMax
	}
	return 0
}

func (x *OffchainConfig) GetS() []uint32 {
	if x != nil {
		return x.S
	}
	return nil
}

func (x *OffchainConfig) GetOffchainPublicKeys() [][]byte {
	if x != nil {
		return x.OffchainPublicKeys
	}
	return nil
}

func (x *OffchainConfig) GetPeerIds() []string {
	if x != nil {
		return x.PeerIds
	}
	return nil
}

func (x *OffchainConfig) GetReportingPluginConfig() []byte {
	if x != nil {
		return x.ReportingPluginConfig
	}
	return nil
}

func (x *OffchainConfig) GetMaxDurationQuery() uint64 {
	if x != nil {
		return x.MaxDurationQuery
	}
	return 0
}

func (x *OffchainConfig) GetMaxDurationObservation() uint64 {
	if x != nil {
		return x.MaxDurationObservation
	}
	return 0
}

func (x *OffchainConfig) GetMaxDurationReport() uint64 {
	if x != nil {
		return x.MaxDurationReport
	}
	return 0
}

func (x *OffchainConfig) GetMaxDurationShouldAcceptFinalizedReport() uint64 {
	if x != nil {
		return x.MaxDurationShouldAcceptFinalizedReport
	}
	return 0
}

func (x *OffchainConfig) GetMaxDurationShouldTransmitAcceptedReport() uint64 {
	if x != nil {
		return x.MaxDurationShouldTransmitAcceptedReport
	}
	return 0
}

func (x *OffchainConfig) GetSharedSecretEncryptions() *SharedSecretEncryptionsProto {
	if x != nil {
		return x.SharedSecretEncryptions
	}
	return nil
}

type SharedSecretEncryptionsProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DiffieHellmanPoint []byte   `protobuf:"bytes,1,opt,name=diffieHellmanPoint,proto3" json:"diffieHellmanPoint,omitempty"`
	SharedSecretHash   []byte   `protobuf:"bytes,2,opt,name=sharedSecretHash,proto3" json:"sharedSecretHash,omitempty"`
	Encryptions        [][]byte `protobuf:"bytes,3,rep,name=encryptions,proto3" json:"encryptions,omitempty"`
}

func (x *SharedSecretEncryptionsProto) Reset() {
	*x = SharedSecretEncryptionsProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_offchain_config_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SharedSecretEncryptionsProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SharedSecretEncryptionsProto) ProtoMessage() {}

func (x *SharedSecretEncryptionsProto) ProtoReflect() protoreflect.Message {
	mi := &file_offchain_config_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SharedSecretEncryptionsProto.ProtoReflect.Descriptor instead.
func (*SharedSecretEncryptionsProto) Descriptor() ([]byte, []int) {
	return file_offchain_config_proto_rawDescGZIP(), []int{1}
}

func (x *SharedSecretEncryptionsProto) GetDiffieHellmanPoint() []byte {
	if x != nil {
		return x.DiffieHellmanPoint
	}
	return nil
}

func (x *SharedSecretEncryptionsProto) GetSharedSecretHash() []byte {
	if x != nil {
		return x.SharedSecretHash
	}
	return nil
}

func (x *SharedSecretEncryptionsProto) GetEncryptions() [][]byte {
	if x != nil {
		return x.Encryptions
	}
	return nil
}

var File_offchain_config_proto protoreflect.FileDescriptor

var file_offchain_config_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6f, 0x66, 0x66, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x24, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x6c, 0x69,
	0x6e, 0x6b, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e, 0x6f, 0x63, 0x72, 0x32, 0x2e, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x62, 0x65, 0x74, 0x61, 0x31, 0x22, 0xb9, 0x06,
	0x0a, 0x0e, 0x4f, 0x66, 0x66, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x74, 0x61,
	0x5f, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64,
	0x65, 0x6c, 0x74, 0x61, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65,
	0x6c, 0x74, 0x61, 0x5f, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0a, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x52, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x64,
	0x65, 0x6c, 0x74, 0x61, 0x5f, 0x67, 0x72, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x47, 0x72, 0x61, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x53, 0x74, 0x61, 0x67, 0x65, 0x12, 0x13, 0x0a,
	0x05, 0x72, 0x5f, 0x6d, 0x61, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x72, 0x4d,
	0x61, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x01, 0x73,
	0x12, 0x30, 0x0a, 0x14, 0x6f, 0x66, 0x66, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x12,
	0x6f, 0x66, 0x66, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x65, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x36, 0x0a,
	0x17, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15,
	0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x18, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x6f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x16, 0x6d, 0x61, 0x78, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a,
	0x13, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x5b, 0x0a,
	0x2b, 0x6d, 0x61, 0x78, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x68,
	0x6f, 0x75, 0x6c, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x66, 0x69, 0x6e, 0x61,
	0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x26, 0x6d, 0x61, 0x78, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x68, 0x6f, 0x75, 0x6c, 0x64, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x5d, 0x0a, 0x2c, 0x6d, 0x61,
	0x78, 0x5f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x75, 0x6c,
	0x64, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x27, 0x6d, 0x61, 0x78, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x68, 0x6f,
	0x75, 0x6c, 0x64, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6d, 0x69, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x7e, 0x0a, 0x19, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x42, 0x2e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x6c, 0x69, 0x6e, 0x6b, 0x2e, 0x63, 0x6f, 0x73, 0x6d, 0x6f, 0x73, 0x2e,
	0x6f, 0x63, 0x72, 0x32, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x76, 0x31, 0x62, 0x65,
	0x74, 0x61, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x17, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x1c, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x2e, 0x0a, 0x12, 0x64, 0x69,
	0x66, 0x66, 0x69, 0x65, 0x48, 0x65, 0x6c, 0x6c, 0x6d, 0x61, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x12, 0x64, 0x69, 0x66, 0x66, 0x69, 0x65, 0x48, 0x65,
	0x6c, 0x6c, 0x6d, 0x61, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x64, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x0b, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2e, 0x2f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_offchain_config_proto_rawDescOnce sync.Once
	file_offchain_config_proto_rawDescData = file_offchain_config_proto_rawDesc
)

func file_offchain_config_proto_rawDescGZIP() []byte {
	file_offchain_config_proto_rawDescOnce.Do(func() {
		file_offchain_config_proto_rawDescData = protoimpl.X.CompressGZIP(file_offchain_config_proto_rawDescData)
	})
	return file_offchain_config_proto_rawDescData
}

var file_offchain_config_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_offchain_config_proto_goTypes = []interface{}{
	(*OffchainConfig)(nil),               // 0: chainlink.cosmos.ocr2.config.v1beta1.OffchainConfig
	(*SharedSecretEncryptionsProto)(nil), // 1: chainlink.cosmos.ocr2.config.v1beta1.SharedSecretEncryptionsProto
}
var file_offchain_config_proto_depIdxs = []int32{
	1, // 0: chainlink.cosmos.ocr2.config.v1beta1.OffchainConfig.shared_secret_encryptions:type_name -> chainlink.cosmos.ocr2.config.v1beta1.SharedSecretEncryptionsProto
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_offchain_config_proto_init() }
func file_offchain_config_proto_init() {
	if File_offchain_config_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_offchain_config_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OffchainConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_offchain_config_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SharedSecretEncryptionsProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_offchain_config_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_offchain_config_proto_goTypes,
		DependencyIndexes: file_offchain_config_proto_depIdxs,
		MessageInfos:      file_offchain_config_proto_msgTypes,
	}.Build()
	File_offchain_config_proto = out.File
	file_offchain_config_proto_rawDesc = nil
	file_offchain_config_proto_goTypes = nil
	file_offchain_config_proto_depIdxs = nil
}
